<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.apache.dolphinscheduler.dao.mapper.ProcessInstanceMapper">
    <select id="queryDetailById" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select inst.*
        from t_ds_process_instance inst
        where inst.id = #{processId}
    </select>
    <select id="queryByHostAndStatus" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where 1=1
        <if test="host != null and host != ''">
            and host=#{host}
        </if>
        and state in
        <foreach collection="states" item="i" open="(" close=")" separator=",">
            #{i}
        </foreach>
        order by id asc
    </select>

    <select id="queryByTenantIdAndStatus" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where 1=1
        <if test="tenantId != -1">
            and tenant_id =#{tenantId}
        </if>
        and state in
        <foreach collection="states" item="i" open="(" close=")" separator=",">
            #{i}
        </foreach>
        order by id asc
    </select>

    <select id="queryByWorkerGroupNameAndStatus" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where 1=1
        <if test="workerGroupName != ''">
            and worker_group =#{workerGroupName}
        </if>
        and state in
        <foreach collection="states" item="i" open="(" close=")" separator=",">
            #{i}
        </foreach>
        order by id asc
    </select>

    <select id="queryProcessInstanceListPaging" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select instance.id, instance.process_definition_id, instance.command_type, instance.executor_id,
        instance.name, instance.state, instance.schedule_time, instance.start_time, instance.end_time,
        instance.run_times, instance.recovery, instance.host, instance.scheduler_interval, instance.scheduler_batch_no,
        instance.process_type, instance.dependent_scheduler_type, instance.scheduler_start_id, instance.scheduler_rerun_no,
        instance.rerun_scheduler_flag, instance.dependent_scheduler_flag
        from t_ds_process_instance instance
        join t_ds_process_definition define ON instance.process_definition_id = define.id
        where instance.is_sub_process=0
        and define.project_id = #{projectId}
        <if test="processDefinitionId != 0">
            and instance.process_definition_id = #{processDefinitionId}
        </if>
        <if test="searchVal != null and searchVal != ''">
            and  instance.name like concat('%', #{searchVal}, '%')
        </if>
        <if test="startTime != null ">
            and instance.start_time > #{startTime} and instance.start_time <![CDATA[ <=]]> #{endTime}
        </if>
        <choose>
            <when test="states != null and states != ''">
                and instance.state in
                <foreach collection="states" index="index" item="i" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </when>
            <otherwise>
                and (instance.state != 98 and instance.state != 99)
            </otherwise>
        </choose>
        <if test="host != null and host != ''">
            and instance.host like concat('%', #{host}, '%')
        </if>
        <if test="executorId != 0">
            and instance.executor_id = #{executorId}
        </if>
        order by instance.start_time desc
    </select>
    <update id="setFailoverByHostAndStateArray">
        update t_ds_process_instance
        set host=null
        where host =#{host} and state in
        <foreach collection="states" index="index" item="i" open="(" close=")" separator=",">
            #{i}
        </foreach>
    </update>
    <update id="updateProcessInstanceByState">
        update t_ds_process_instance
        set state = #{destState}
        where state = #{originState}
    </update>

    <update id="updateProcessInstanceByTenantId">
        update t_ds_process_instance
        set tenant_id = #{destTenantId}
        where tenant_id = #{originTenantId}
    </update>

    <update id="updateProcessInstanceByWorkerGroupName">
        update t_ds_process_instance
        set worker_group = #{destWorkerGroupName}
        where worker_group = #{originWorkerGroupName}
    </update>

    <select id="countInstanceStateByUser" resultType="org.apache.dolphinscheduler.dao.entity.ExecuteStatusCount">
        select t.state, count(0) as count
        from t_ds_process_instance t
        join t_ds_process_definition d on d.id=t.process_definition_id
        join t_ds_project p on p.id=d.project_id
        where 1 = 1
        and t.is_sub_process = 0
        and (t.state != 98 and t.state != 99)
        <if test="startTime != null and endTime != null">
            and  t.start_time <![CDATA[ >= ]]> #{startTime} and t.start_time <![CDATA[ <= ]]> #{endTime}
        </if>
        <if test="projectIds != null and projectIds.length != 0">
            and p.id in
            <foreach collection="projectIds" index="index" item="i" open="(" close=")" separator=",">
                #{i}
            </foreach>
        </if>
        group by t.state
    </select>
    <select id="queryByProcessDefineId" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where process_definition_id=#{processDefinitionId}
        order by start_time desc limit #{size}
    </select>
    <select id="queryLastSchedulerProcess" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where process_definition_id=#{processDefinitionId}
        and (state != 98 and state != 99)
        <if test="startTime!=null and endTime != null ">
            and schedule_time <![CDATA[ >= ]]> #{startTime} and  schedule_time <![CDATA[ <= ]]> #{endTime}
        </if>
        <if test="batchNo != null and batchNo != 0">
            and scheduler_batch_no = #{batchNo}
        </if>
        order by end_time desc limit 1
    </select>
    <select id="queryLastRunningProcess" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where 1=1
        <choose>
            <when test="states !=null and states.length != 0">
                and state in
                <foreach collection="states" item="i" index="index" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </when>
            <otherwise>
                and (state != 98 and state != 99)
            </otherwise>
        </choose>
        <if test="startTime!=null and endTime != null ">
            and process_definition_id=#{processDefinitionId}
            and (schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
                  or start_time <![CDATA[ >= ]]> #{startTime} and start_time <![CDATA[ <= ]]> #{endTime})
        </if>
        <if test="batchNo != null and batchNo != 0">
            and scheduler_batch_no = #{batchNo}
        </if>
        order by start_time desc limit 1
    </select>
    <select id="queryLastManualProcess" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where process_definition_id=#{processDefinitionId}
        and schedule_time is null
        and (state != 98 and state != 99)
        <if test="startTime!=null and endTime != null ">
            and start_time <![CDATA[ >= ]]> #{startTime} and start_time <![CDATA[ <= ]]> #{endTime}
        </if>
        <if test="batchNo != null and batchNo != 0">
            and scheduler_batch_no = #{batchNo}
        </if>
        order by end_time desc limit 1
    </select>
    <select id="findProcessInstanceByProcessIdInInterval" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where process_definition_id = #{processId}
            <if test="states !=null and states.length != 0">
                and state in
                <foreach collection="states" item="i" index="index" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
            <if test="commandTypes != null and commandTypes.length != 0">
                and command_type in
                <foreach collection="commandTypes" item="i" index="index" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
          and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
          and scheduler_batch_no = #{batchNo}
            <if test="dependentSchedulerTypes != null and dependentSchedulerTypes.length != 0">
                and dependent_scheduler_type in
                <foreach collection="dependentSchedulerTypes" item="i" index="index" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
            <if test="dependentSchedulerFlag">
                and dependent_scheduler_flag = #{dependentSchedulerFlag}
            </if>
    </select>
    <select id="getCurrentSchedulerBatchNo" resultType="java.lang.Integer">
        select max(scheduler_batch_no) from t_ds_process_instance
        where process_definition_id = #{processId}
          and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
    </select>
    <update id="updateProcessStateInBatch">
        update t_ds_process_instance
        set state = #{newState}
        where 1=1
        <if test="states !=null and states.length != 0">
            and state in
            <foreach collection="states" item="i" index="index" open="(" separator="," close=")">
                #{i}
            </foreach>
        </if>
        and scheduler_start_id = #{schedulerStartId}
        and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
        and scheduler_batch_no = #{batchNo}
    </update>
    <select id="querySchedulerProcessInstances" resultType="org.apache.dolphinscheduler.dao.entity.ProcessInstance">
        select *
        from t_ds_process_instance
        where 1=1
        <if test="processId != 0">
            and process_definition_id = #{processId}
        </if>
        <if test="processIds !=null and processIds.length != 0">
            and process_definition_id in
            <foreach collection="processIds" item="i" index="index" open="(" separator="," close=")">
                #{i}
            </foreach>
        </if>
        <if test="schedulerStartId != 0">
            and scheduler_start_id = #{schedulerStartId}
        </if>
        <choose>
            <when test="states !=null and states.length != 0">
                and state in
                <foreach collection="states" item="i" index="index" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </when>
            <otherwise>
                and (state != 98 and state != 99)
            </otherwise>
        </choose>
        <if test="commandTypes != null and commandTypes.length != 0">
            and command_type in
            <foreach collection="commandTypes" item="i" index="index" open="(" separator="," close=")">
                #{i}
            </foreach>
        </if>
        <if test="dependentSchedulerTypes != null and dependentSchedulerTypes.length != 0">
            and dependent_scheduler_type in
            <foreach collection="dependentSchedulerTypes" item="i" index="index" open="(" separator="," close=")">
                #{i}
            </foreach>
        </if>
        <if test="dependentSchedulerFlag">
            and dependent_scheduler_flag = #{dependentSchedulerFlag}
        </if>
        and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
        and scheduler_batch_no = #{batchNo}
    </select>
    <select id="findLastBatchDependByProcessIdInIntervalList" resultType="org.apache.dolphinscheduler.dao.entity.vo.depend.DependsVo">
        select
            COALESCE(ins.id,0) as procesId,
            COALESCE(ins.process_definition_id,def_all.id) as definitionId,
            COALESCE(ins.name,def_all.name) as name,
            COALESCE(ins.state,null) as state
        from
        -- 找出当前processId的所有的父节点def id
        (select def.id,def.name from
        (
        select id, dependent_id, process_id, create_time, update_time
        from t_ds_process_dependent
        where process_id = #{processId}
        order by process_id asc
        ) dep
        left join (select * from t_ds_process_definition) def
        on dep.dependent_id = def.id
        where def.release_state != 0) def_all
        -- left join instance 根据 processId, id ,name ,definitionId ,start_time 这几个Instance的字段必要
        left join
        (select * from t_ds_process_instance) ins on def_all.id = ins.process_definition_id
        -- 在调度周期内
        and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
        and scheduler_batch_no = #{batchNo}
        and ins.dependent_scheduler_flag = true
    </select>
    <select id="findLastBatchDependByDependentIdInIntervalList" resultType="org.apache.dolphinscheduler.dao.entity.vo.depend.DependsVo">
        select
            COALESCE(ins.id,0) as procesId,
            COALESCE(ins.process_definition_id,def_all.id) as definitionId,
            COALESCE(ins.name,def_all.name) as name,
            COALESCE(ins.state,null) as state
        from
            -- 找出当前processId的所有的父节点def id
            (select def.id,def.name from
                (
                    select id, dependent_id, process_id, create_time, update_time
                    from t_ds_process_dependent
                    where dependent_id = #{processId}
                    order by process_id asc
                ) dep
                    left join (select * from t_ds_process_definition) def
                              on dep.process_id = def.id
             where def.release_state != 0) def_all
                -- left join instance 根据 processId, id ,name ,definitionId ,start_time 这几个Instance的字段必要
                left join
                (select * from t_ds_process_instance) ins on def_all.id = ins.process_definition_id
                -- 在调度周期内
                and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
                and scheduler_batch_no = #{batchNo}
                and ins.dependent_scheduler_flag = true
    </select>
    <select id="findLastBatchDependByProcessInstanceInIntervalList" resultType="org.apache.dolphinscheduler.dao.entity.vo.depend.DependsVo">
        select
            COALESCE(ins.id,0) as procesId,
            COALESCE(ins.process_definition_id,def_all.id) as definitionId,
            COALESCE(ins.name,def_all.name) as name,
            COALESCE(ins.state,null) as state,
            'parent' dependType
        from
            -- 找出当前processId的所有的父节点def id
            (select def.id,def.name from
                (
                    select id, dependent_id, process_id, create_time, update_time
                    from t_ds_process_dependent
                    where process_id = #{processId}
                    order by process_id asc
                ) dep
                    left join (select * from t_ds_process_definition) def
                              on dep.dependent_id = def.id
             where def.release_state != 0) def_all
                -- left join instance 根据 processId, id ,name ,definitionId ,start_time 这几个Instance的字段必要
                left join
                (select * from t_ds_process_instance) ins on def_all.id = ins.process_definition_id
                -- 在调度周期内
                and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
                and scheduler_batch_no = #{batchNo}
                and ins.dependent_scheduler_flag = true
        union all
        select
            COALESCE(ins.id,0) as procesId,
            COALESCE(ins.process_definition_id,def_all.id) as definitionId,
            COALESCE(ins.name,def_all.name) as name,
            COALESCE(ins.state,null) as state,
            'child' dependType
        from
            -- 找出当前processId的所有的父节点def id
            (select def.id,def.name from
                (
                    select id, dependent_id, process_id, create_time, update_time
                    from t_ds_process_dependent
                    where dependent_id = #{processId}
                    order by process_id asc
                ) dep
                    left join (select * from t_ds_process_definition) def
                              on dep.process_id = def.id
             where def.release_state != 0) def_all
                -- left join instance 根据 processId, id ,name ,definitionId ,start_time 这几个Instance的字段必要
                left join
                (select * from t_ds_process_instance) ins on def_all.id = ins.process_definition_id
                -- 在调度周期内
                and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}
                and scheduler_batch_no = #{batchNo}
                and ins.dependent_scheduler_flag = true
    </select>
    <select id="findLastBatchDependByProcessDefinitionInIntervalList" resultType="org.apache.dolphinscheduler.dao.entity.vo.depend.DependsVo">
        select
            null as procesId,
            def_all.id as definitionId,
            def_all.name as name,
            null as state,
            'parent' dependType
        from
            -- 找出当前processId的所有的父节点def id
            (select def.id,def.name from
                (
                    select id, dependent_id, process_id, create_time, update_time
                    from t_ds_process_dependent
                    where process_id = #{processId}
                    order by process_id asc
                ) dep
                    left join (select * from t_ds_process_definition) def
                              on dep.dependent_id = def.id
             where def.release_state != 0) def_all
        union all
        select
            null as procesId,
            def_all.id as definitionId,
            def_all.name as name,
            null as state,
            'child' dependType
        from
            -- 找出当前processId的所有的父节点def id
            (select def.id,def.name from
                (
                    select id, dependent_id, process_id, create_time, update_time
                    from t_ds_process_dependent
                    where dependent_id = #{processId}
                    order by process_id asc
                ) dep
                    left join (select * from t_ds_process_definition) def
                              on dep.process_id = def.id
             where def.release_state != 0) def_all
    </select>

<!--    <resultMap id="var" type="java.util.HashMap"/>-->
<!--    <resultMap id="processInstance" type="org.apache.dolphinscheduler.dao.entity.ProcessInstance"/>-->
<!--    <select id="findLastBatchProcessInstanceByProcessIdInIntervalList" resultType="var,processInstance">-->
<!--        select @rn:=0, @id:=0;-->
<!--        select-->
<!--        res.id, res.name, res.process_definition_id, res.state, res.recovery, res.start_time, res.end_time, res.run_times, res.host, res.command_type, res.command_param, res.task_depend_type, res.max_try_times, res.failure_strategy, res.warning_type, res.warning_group_id, res.schedule_time, res.command_start_time, res.global_params, res.process_instance_json, res.flag, res.update_time, res.is_sub_process, res.executor_id, res.locations, res.connects, res.history_cmd, res.dependence_schedule_times, res.process_instance_priority, res.worker_group, res.timeout, res.tenant_id, res.scheduler_interval, res.scheduler_batch_no, res.process_type, res.dependent_scheduler_flag, res.scheduler_start_id, res.scheduler_rerun_no, res.rerun_scheduler_flag-->
<!--        from (-->
<!--        select-->
<!--        @rn:= case when @id = ins.process_definition_id then @rn + 1 else 1 end as rn,-->
<!--        @id:= ins.process_definition_id as df_id,-->
<!--        ins.*-->
<!--        from-->
<!--        (-->
<!--        select a.*,b.*-->
<!--        from-->
<!--        (select * from-->
<!--        t_ds_process_instance-->
<!--        where process_definition_id in (-->
<!--        select def.id from-->
<!--        (-->
<!--        select id, dependent_id, process_id, create_time, update_time-->
<!--        from t_ds_process_dependent-->
<!--        where process_id = #{processId}-->
<!--        order by process_id asc-->
<!--        ) dep-->
<!--        left join (select * from t_ds_process_definition) def-->
<!--        on dep.dependent_id = def.id-->
<!--        where def.release_state != 0-->
<!--        )-->
<!--        and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}-->
<!--        and scheduler_batch_no = #{batchNo}-->
<!--        and dependent_scheduler_flag = true-->
<!--        order by process_definition_id,start_time desc) a,-->

<!--        (select @rn=0, @id=0) b-->
<!--        ) ins ) res-->
<!--        where res.rn = 1-->

<!--        union all-->

<!--        select-->
<!--        ifnull( null_ins.id, 0) as id,-->
<!--        ifnull( null_ins.name,null_id.name) as name,-->
<!--        ifnull( null_ins.process_definition_id,null_id.id) as process_definition_id,-->
<!--        null_ins.state,-->
<!--        null_ins.recovery,-->
<!--        ifnull( null_ins.start_time,'9999-99-99 00:00:00') start_time,-->
<!--        null_ins.end_time,-->
<!--        null_ins.run_times,-->
<!--        null_ins.host,-->
<!--        null_ins.command_type,-->
<!--        null_ins.command_param,-->
<!--        null_ins.task_depend_type,-->
<!--        null_ins.max_try_times,-->
<!--        null_ins.failure_strategy,-->
<!--        null_ins.warning_type,-->
<!--        null_ins.warning_group_id,-->
<!--        null_ins.schedule_time,-->
<!--        null_ins.command_start_time,-->
<!--        null_ins.global_params,-->
<!--        null_ins.process_instance_json,-->
<!--        null_ins.flag,-->
<!--        null_ins.update_time,-->
<!--        null_ins.is_sub_process,-->
<!--        null_ins.executor_id,-->
<!--        null_ins.locations,-->
<!--        null_ins.connects,-->
<!--        null_ins.history_cmd,-->
<!--        null_ins.dependence_schedule_times,-->
<!--        null_ins.process_instance_priority,-->
<!--        null_ins.worker_group,-->
<!--        null_ins.timeout,-->
<!--        null_ins.tenant_id,-->
<!--        null_ins.scheduler_interval,-->
<!--        null_ins.scheduler_batch_no,-->
<!--        null_ins.process_type,-->
<!--        null_ins.dependent_scheduler_flag,-->
<!--        null_ins.scheduler_start_id,-->
<!--        null_ins.scheduler_rerun_no,-->
<!--        null_ins.rerun_scheduler_flag from-->
<!--        (-->
<!--        select def_all.* from-->
<!--        &#45;&#45; 查询出dependent 所有的 definitionId 的值-->
<!--        (-->
<!--        select def.id,def.name from-->
<!--        (-->
<!--        select id, dependent_id, process_id, create_time, update_time-->
<!--        from t_ds_process_dependent-->
<!--        where process_id = #{processId}-->
<!--        order by process_id asc-->
<!--        ) dep-->
<!--        left join (select * from t_ds_process_definition) def-->
<!--        on dep.dependent_id = def.id-->
<!--        where def.release_state != 0-->
<!--        ) def_all-->
<!--        left join-->
<!--        &#45;&#45; 根据definitionId 查询出所有存在实例的 processInstance-->
<!--        (-->
<!--        select process_definition_id from-->
<!--        &#45;&#45; 			select * from-->
<!--        t_ds_process_instance-->
<!--        where process_definition_id in (-->
<!--        select def.id from-->
<!--        (-->
<!--        select id, dependent_id, process_id, create_time, update_time-->
<!--        from t_ds_process_dependent-->
<!--        where process_id = 14-->
<!--        order by process_id asc-->
<!--        ) dep-->
<!--        left join (select * from t_ds_process_definition) def-->
<!--        on dep.dependent_id = def.id-->
<!--        where def.release_state != 0-->
<!--        )-->
<!--        and schedule_time <![CDATA[ >= ]]> #{startTime} and schedule_time <![CDATA[ <= ]]> #{endTime}-->
<!--        and scheduler_batch_no = #{batchNo}-->
<!--        and dependent_scheduler_flag = true-->
<!--        group by process_definition_id-->
<!--        ) ins_all-->
<!--        on def_all.id = ins_all.process_definition_id-->
<!--        where ins_all.process_definition_id is null-->
<!--        ) null_id-->
<!--        left join-->
<!--        (select * from t_ds_process_instance where schedule_time> '9999-99-99 99:99:99') null_ins-->
<!--        on null_id.id = null_ins.id-->
<!--    </select>-->

</mapper>